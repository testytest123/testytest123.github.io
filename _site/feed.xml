<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-09-07T15:28:41+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ScrumWithMe.com</title><subtitle>An online resource for all things Agile</subtitle><author><name>Scott McLintock</name></author><entry><title type="html">Migrating from Waterfall to Scrum</title><link href="http://localhost:4000/2021/09/07/Migrating-From-Waterfall-To-Scrum/" rel="alternate" type="text/html" title="Migrating from Waterfall to Scrum" /><published>2021-09-07T13:52:00+01:00</published><updated>2021-09-07T13:52:00+01:00</updated><id>http://localhost:4000/2021/09/07/Migrating-From-Waterfall-To-Scrum</id><content type="html" xml:base="http://localhost:4000/2021/09/07/Migrating-From-Waterfall-To-Scrum/">&lt;p&gt;A lot of companies have been migrating over to an ‘Agile’ way of working since it exploded onto the scene several years ago, and yet a lot of them struggle in doing so. This is usually due to a lack of understanding and a refusal to move away from the Waterfall methodology. Obviously, every company is different and the need to adapt is often required regardless of your understanding. However, what a lot of companies fail to take into consideration when transitioning to Scrum is that there is a lot more to it than dressing up a Waterfall model in Scrum clothing.&lt;/p&gt;

&lt;p&gt;After researching the transition from Waterfall to Scrum I documented various solutions to some of the common problems that companies tend to encounter:&lt;/p&gt;

&lt;h2 id=&quot;1-the-development-team-is-lacking-motivation-and-enthusiasm-toward-day-to-day-activities&quot;&gt;1. The development team is lacking motivation and enthusiasm toward day to day activities&lt;/h2&gt;

&lt;p&gt;One of the best ways to overcome a lack of motivation is to encourage a self managed team as opposed to assigning tasks to individuals within the team. In fact, the word “assign” doesn’t feature at all in either the Agile Manifesto or the Scrum Guide. Instead of micromanaging a development team that are fully aware of the project requirements, place your trust in your developers to manage themselves during each sprint. This way you may dedicate your time to providing the tools, environments and support needed for them to get the job done. Your development team should have an equal say in decision-making with regards to planning, prioritising and approach.&lt;/p&gt;

&lt;p&gt;Daily stand ups are also an essential part of the Scrum methodology and play a big part in spreading awareness of the progress and impediments that can make or break a project. They can also be incredibly boring and a complete waste of time when members of the team aren’t paying attention or are multitasking (a problem that has been growing dramatically in recent years since the move to home working was introduced). Below are some tips for promoting enthusiasm during your daily stand ups:&lt;/p&gt;

&lt;p&gt;• With Jira open (or an alternative management program), have the Scrum Master or a nominated host navigate to the task being discussed so others gain awareness of the requirements. A visual reference is enough for other team members to gain a familiarity with the task should they encounter it again in the future.&lt;/p&gt;

&lt;p&gt;• Stick to discussing only the project tasks related to the current sprint. This means no mention of computer updates, training exercises or meetings. This will help cut down on the ramblings of those eager beavers that just don’t know when to shut up.&lt;/p&gt;

&lt;p&gt;• Pick speakers at random instead of alphabetically. This can help prevent people from drifting off and multitasking while they wait for their turn to speak. Obviously, this is more difficult with a larger team but tools such as wheelofnames.com can be utilised to help track those that have or haven’t yet given their update.&lt;/p&gt;

&lt;h2 id=&quot;2-the-race-against-time-is-interfering-with-the-quality-of-work&quot;&gt;2. The race against time is interfering with the quality of work&lt;/h2&gt;

&lt;p&gt;You followed the rules; you implemented Sprints; you even held retrospectives but still the quality of work is getting worse and the deadline is drawing closer with each passing day. Does this sound familiar? This is because the ‘Agile’ approach is designed for flexibility and doesn’t play nice with the hard deadlines. So what are you meant to do? One way of overcoming this is to look into forecasting and introducing incremental releases.&lt;/p&gt;

&lt;p&gt;By looking at past projects as a way to determine how long a piece of work will take you to complete, you can provide the client with an approximate deadline of when this is likely to be released. This way you can review the estimate on a sprint by sprint basis in order to postpone or bring the date forwards as things progress. By doing this you can provide the client with a deadline that isn’t set in stone but with the reassurance you will be providing the best quality of work and are less likely to revert the changes when problems no doubt arise deploying everything all at once.&lt;/p&gt;

&lt;h2 id=&quot;3-disappointing-clients-and-continuously-being-the-bearer-of-bad-news&quot;&gt;3. Disappointing clients and continuously being the bearer of bad news&lt;/h2&gt;

&lt;p&gt;Prior to starting the project, it is recommended that you agree on the priority of each separate piece of functionality and deploy and release these based on the level of importance. This way you are constantly delivering and not keeping the client waiting until the very end of the project to see results. Promoting continuous movement means your developers and testers can work simultaneously and speed up the overall project.&lt;/p&gt;

&lt;p&gt;At the end of each sprint it is also recommended that you carry out a demo with the client so they can see for themselves how things are moving along. This way, they will be more understanding of the impediments that delay the estimated release date and will be encouraged to work with you to resolve the problems instead of just complaining about them. The back and forth with your client should feel more like a partnership with one shared goal to produce something you can both be proud of instead of the mad rush that’s often associated with hard deadlines.&lt;/p&gt;</content><author><name>Scott McLintock</name></author><category term="Agile," /><category term="Waterfall," /><category term="Scrum," /><category term="Problems" /><summary type="html">A lot of companies have been migrating over to an ‘Agile’ way of working since it exploded onto the scene several years ago, and yet a lot of them struggle in doing so. This is usually due to a lack of understanding and a refusal to move away from the Waterfall methodology. Obviously, every company is different and the need to adapt is often required regardless of your understanding. However, what a lot of companies fail to take into consideration when transitioning to Scrum is that there is a lot more to it than dressing up a Waterfall model in Scrum clothing.</summary></entry><entry><title type="html">What are the differences between Agile and Scrum?</title><link href="http://localhost:4000/2021/08/17/Differences-Between-Agile-and-Scrum/" rel="alternate" type="text/html" title="What are the differences between Agile and Scrum?" /><published>2021-08-17T13:52:00+01:00</published><updated>2021-08-17T13:52:00+01:00</updated><id>http://localhost:4000/2021/08/17/Differences-Between-Agile-and-Scrum</id><content type="html" xml:base="http://localhost:4000/2021/08/17/Differences-Between-Agile-and-Scrum/">&lt;p&gt;‘Agile’ and ‘Scrum’ are two terms that often go hand in hand and are often confused for being the same thing, but what actually are the main differences between the two? Before we get into the differences of each, we need to understand the history of Scrum.&lt;/p&gt;

&lt;h2 id=&quot;origins-of-scrum&quot;&gt;Origins of Scrum&lt;/h2&gt;

&lt;p&gt;Originally, all projects used to be managed using the Waterfall approach where the flow followed the gathering of requirements, design, implementation, testing and eventually deployment and maintenance of a product but as personal computing and software began to grow in popularity, this approach was considered time consuming and rigid, making it difficult to introduce new changes to the project. It was for this reason that development teams decided that customer collaboration and an improved response to change was required in order for a product to succeed. This is when various frameworks similar to Scrum began popping up in the industry around the same time that all shared the same &lt;a href=&quot;https://www.scrumwithme.com/about/&quot;&gt;values and principles&lt;/a&gt;  translated into a series of different processes and roles within a company that help teams to structure and manage their work. These values and principles would later go on to become known as “Agile”.&lt;/p&gt;

&lt;p&gt;An overview of the Scrum model allows us to break down the framework into 5 steps or phases that are enforced by the Scrum Master that allow this framework to adhear to the Agile way of working. These are as follows:&lt;/p&gt;

&lt;h2 id=&quot;product-backlog&quot;&gt;Product Backlog&lt;/h2&gt;

&lt;p&gt;The product backlog is a list of tasks that are derived from the product roadmap and are broken down and prioritised with the most important items at the top of the list. Prioritising these tasks gives each member of the team a sense of direction and helps to enforce the idea of a self managed team. The product backlog itself is owned by the Product Owner who is responsible for the product roadmap and has a clear understanding of what features will require development first.&lt;/p&gt;

&lt;h2 id=&quot;sprint-planning&quot;&gt;Sprint Planning&lt;/h2&gt;

&lt;p&gt;No sprint is ready to begin without a planning session to kick things off. This is required to determine what the development team is capable of delivering within the sprint, whether this be one or two weeks or another time limit altogether. Sprint planning normally requires the whole scrum team to contribute and commit to the level of work that is being set out as well as agreeing on a goal or goals for the sprint.&lt;/p&gt;

&lt;h2 id=&quot;working-on-a-sprint&quot;&gt;Working on a sprint&lt;/h2&gt;

&lt;p&gt;Throughout an active sprint, the development team will attend ‘stand up’ meetings on a daily basis in order to check in and give an update on their current status. This helps the product owner to track progress of development / testing and highlights any impediments the team might have encountered. It is the responsibility of the Scrum Master to try and resolve any impediments that might impact the team’s ability to deliver the sprint goal.&lt;/p&gt;

&lt;h2 id=&quot;product-demonstration&quot;&gt;Product Demonstration&lt;/h2&gt;

&lt;p&gt;The product demo is essential for keeping stakeholders updated with the progress of product development and allows them to give feedback on any possible amendments to the product backlog that might be required to maximise the value of the product. This feedback should then be taken into consideration when planning the next sprint. The demo will be attended by the entire Scrum team as well as any stakeholders and management that have an input on the product roadmap.&lt;/p&gt;

&lt;h2 id=&quot;retrospective&quot;&gt;Retrospective&lt;/h2&gt;

&lt;p&gt;The retrospective is a timeboxed meeting that takes place after the sprint is complete with the purpose of reviewing the success of each sprint. Each member of the team is encouraged to speak freely on matters related to people, relationships, processes and tools. These issues are then voted on in terms of popularity and the highest voted items are discussed in order of most popular to least popular as a way of identifying and addressing the more significant issues first opposed to those that only impact certain individuals.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In conclusion, Agile can be considered more of a philosophy to project management whereas Scrum (and all the other approaches that are based on the same values and principles) are frameworks designed to put this philosphy into practice. It is the backbone that connects both lightweight frameworks designed for single teams as well as more robust approaches like the Scaled Agile Framework.&lt;/p&gt;

&lt;p&gt;Based on the fact that Agile and all it’s values and principles were only defined after the creation of various frameworks like Scrum in which they existed nameless until the Agile manifesto was created back in 2001, it is safe to say neither Scrum or Agile would exist without each other, but are not, in fact, the same thing.&lt;/p&gt;</content><author><name>Scott McLintock</name></author><category term="Agile," /><category term="Waterfall," /><category term="Scrum" /><summary type="html">‘Agile’ and ‘Scrum’ are two terms that often go hand in hand and are often confused for being the same thing, but what actually are the main differences between the two? Before we get into the differences of each, we need to understand the history of Scrum.</summary></entry><entry><title type="html">Agile vs Waterfall (Pandemic Edition)</title><link href="http://localhost:4000/2021/08/13/Agile-vs-Waterfall/" rel="alternate" type="text/html" title="Agile vs Waterfall (Pandemic Edition)" /><published>2021-08-13T14:52:00+01:00</published><updated>2021-08-13T14:52:00+01:00</updated><id>http://localhost:4000/2021/08/13/Agile-vs-Waterfall</id><content type="html" xml:base="http://localhost:4000/2021/08/13/Agile-vs-Waterfall/">&lt;p&gt;When studying the Agile methodology, the Waterfall model (in which progress flows downwards through design, development and deployment until you reach product completion) is one that is hard to escape when transitioning from a “traditional” project management approach to one such as Scrum (the continuous cycle of delivering progress). It’s one of the most frequently debated topics in the industry along with Windows vs Mac, Manual vs Automated or Front End vs Back End (and let’s not forget Full Stack) but what difference has it made given the impact of the COVID-19 pandemic on the economy?&lt;/p&gt;

&lt;p&gt;Surveys show that 93% of companies that had implemented an “agile” model prior to the COVID-19 pandemic were more successful than those that hadn’t. This demonstrates that frequent releases and updates are essential with the economy struggling to get back on its feet as a result of the pandemic but exactly how has an “agile” mindset helped businesses get through the past couple of years of lockdowns and working from home? Why is it worth transitioning from a Waterfall approach if you haven’t already done so?&lt;/p&gt;

&lt;h2 id=&quot;adapting-to-change&quot;&gt;Adapting to Change&lt;/h2&gt;

&lt;p&gt;One thing that Agile is particularly well suited for is adapting to change with it being one of the four core values of the Agile methodology. With lockdowns impacting not just how we work but the work itself, companies have been left on the edge of their seats watching the news for restriction changes around the world. In the cinema industry, for example, seating restrictions and social distancing rules have been implemented and lifted numerous times throughout lockdown with many theatres being forced to close altogether, opening with a only few days notice to get ready with the new restrictions.&lt;/p&gt;

&lt;p&gt;With Agile, customer input is welcomed throughout the development process with effective communication being the key to staying on top of the ever changing restrictions. Reviewing the Product Backlog (the breakdown of work) on a regular basis makes it easier to prioritise tasks when these changes occur. This can result in new tasks entering the Sprint (a time-boxed period where work should be completed) and can sometimes alter the goals of a Sprint entirely. Using an “agile” approach such as Scrum makes this achievable over the Waterfall methodology due to the use of daily and weekly meetings like Stand Ups, Sprint Planning and Retrospectives that make sure everyone is aware of the ever changing requirements that are expected of them and ensures that everyone’s voice is heard.&lt;/p&gt;

&lt;h2 id=&quot;self-organised-teams&quot;&gt;Self Organised Teams&lt;/h2&gt;

&lt;p&gt;The Agile Methodology promotes self organised teams who are responsible for assigning and tracking their own work and progress. This is beneficial to a business in a number of ways as it cuts down on the necessary resources and overhead that are often associated with  micro-managing. It also encourages developers to become more enthusiastic towards their work by creating a sense of ownership and introducing a happier working environment where employees feel trusted to get the job done.&lt;/p&gt;

&lt;p&gt;For self organised teams to succeed it is important to offer motivation and support through acknowledgment and recognition, team building exercises and introducing an element of fun to the workplace. In &lt;a href=&quot;https://company.boxoffice.com&quot;&gt;The Boxoffice Company&lt;/a&gt;, for example, the employees have stayed motivated working from home by encouraging virtual movie nights, quizzes and making plans for a time where we can once again meet up for our annual BBQ. Prior to working from home, a fun office environment was introduced with table tennis and Mario Kart tournaments ensuring the workplace was always a welcome environment.&lt;/p&gt;

&lt;p&gt;Of course, with the Waterfall methodology there is nothing stopping you from encouraging a fun and relaxed environment but this can often feel a lot more like forced fun when the workload and ownership is delegated and ‘wins’ (such as product launches) are far and few between.&lt;/p&gt;

&lt;p&gt;Take a moment to reflect on your current place of work. How well do they cope with change and communication? How do they encourage ownership and enthusiasm in the work that you do? What constitutes a win? No working environment is entirely perfect, especially one in the midst of a pandemic, but it is the drive to improve and adapt that makes them truly “agile”.&lt;/p&gt;</content><author><name>Scott McLintock</name></author><category term="Agile," /><category term="Waterfall," /><category term="Pandemic" /><summary type="html">When studying the Agile methodology, the Waterfall model (in which progress flows downwards through design, development and deployment until you reach product completion) is one that is hard to escape when transitioning from a “traditional” project management approach to one such as Scrum (the continuous cycle of delivering progress). It’s one of the most frequently debated topics in the industry along with Windows vs Mac, Manual vs Automated or Front End vs Back End (and let’s not forget Full Stack) but what difference has it made given the impact of the COVID-19 pandemic on the economy?</summary></entry><entry><title type="html">Introduction to ScrumWithMe.com</title><link href="http://localhost:4000/2021/08/10/Introduction_to_ScrumWithMe/" rel="alternate" type="text/html" title="Introduction to ScrumWithMe.com" /><published>2021-08-10T14:52:00+01:00</published><updated>2021-08-10T14:52:00+01:00</updated><id>http://localhost:4000/2021/08/10/Introduction_to_ScrumWithMe</id><content type="html" xml:base="http://localhost:4000/2021/08/10/Introduction_to_ScrumWithMe/">&lt;p&gt;Congratulations! You have just taken the first step in learning how to work together to create effective and successful products. Together, we’re going to learn the ins and outs of the “agile” development process whilst reviewing the different frameworks with a focus on Scrum in particular.&lt;/p&gt;

&lt;p&gt;I have worked in various roles within the digital sector covering all aspects of the product life cycle from digital design, front end devlopment, quality assurance and product ownership. I have also worked across various Agile and Waterfall based companies and it is for this reason I have gained an appreciation for Scrum and all that it has to offer. I am now starting a new journey in my career with the intention of becoming a certified Scrum Master working at &lt;a href=&quot;https://company.boxoffice.com&quot;&gt;The Boxoffice Company&lt;/a&gt; and invite you to join me as I share all that I learn and experience.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-scrum-master&quot;&gt;What is a Scrum Master?&lt;/h2&gt;

&lt;p&gt;Put simply, the Scrum Master is accountable for establishing Scrum and it is their responsibility to help the other members of their team to understand Scrum as well as helping to constantly improve the practices and processes of day to day activities within the workplace. This can range from coaching team members to working alongside the Product Owner to effectively manage the Product Backlog as well as various other Scrum related responsibilities. Exactly what this means and how it is achieved will be described in detail throughout this blog.&lt;/p&gt;

&lt;p&gt;Scrum Master certification is split into 3 levels that determine a person’s knowledge on the subject:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scrum.org/professional-scrum-master-i-certification&quot;&gt;PSM level I&lt;/a&gt; demonstrates a fundamental level of understanding.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scrum.org/professional-scrum-master-ii-certification&quot;&gt;PSM level II&lt;/a&gt; demonstrates an advanced level of understanding.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scrum.org/professional-scrum-master-iii-certification&quot;&gt;PSM level III&lt;/a&gt; demonstrates a distinguished level of understanding.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Scott McLintock</name></author><category term="Scrum," /><category term="Introduction" /><summary type="html">Congratulations! You have just taken the first step in learning how to work together to create effective and successful products. Together, we’re going to learn the ins and outs of the “agile” development process whilst reviewing the different frameworks with a focus on Scrum in particular.</summary></entry></feed>